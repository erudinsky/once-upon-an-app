# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Azure Container Registry Login
        uses: Azure/docker-login@v1
        with:
          # Container registry username
          username: ${{ secrets.ACRUSER }}
          # Container registry password
          password: ${{ secrets.ACRPASSWORD }}
          # Container registry server url
          login-server: pardusacr.azurecr.io


      - name: Azure Container Registry Build
        uses: Azure/acr-build@v1
        with:
          # Service Principal with Contributor role on the ACR
          service_principal: ${{ secrets.ACRUSER }}
          # Service Principal password
          service_principal_password: ${{ secrets.ACRPASSWORD }}
          # Azure Container Registry tenant
          tenant: 
          # The name of the ACR, minus the .azurecr.io
          registry: pardusacr
          # Repository to use
          repository: once-upon-an-app
          # Github access token for private repositories
          git_access_token: 
          # Docker image name
          image: # optional
          # Docker image tag, default to the commit SHA
          tag: # optional
          # Branch to build from, defaults to master
          branch: # optional
          # The folder in the Github repo that holds the source
          folder: 
          # The location of the Dockerfile; defaults to ./Dockerfile
          dockerfile: # optional
          # JSON specifying key=value pairs as as Docker build arguments
          build_args: # optional